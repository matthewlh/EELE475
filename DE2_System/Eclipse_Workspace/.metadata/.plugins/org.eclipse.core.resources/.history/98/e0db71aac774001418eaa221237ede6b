
#include "count_binary.h"

/* A variable to hold the value of the button pio edge capture register. */
volatile int rxdata;

static void handle_uart_interrupts(void* context, alt_u32 id)
{
	char c;

	/* read rxdata register for incoming byte */
	c = IORD_ALTERA_AVALON_UART_RXDATA(UART_RS232_BASE);

	/* if we are not about to write to the next location that needs to be read from (buffer not full) */
	if( !ring_buffer_full() )
	{
		/* write incoming byte to the buffer and increment wr_idx */
		ring_buffer[ring_buffer_wr_idx++] = c;

		/* wrap wr_idx to within the bounds of the buffer size */
		ring_buffer_wr_idx = ring_buffer_wr_idx % BUFFER_SIZE;
	}
	else
	{
		/* buffer is full, so the incoming byte is discarded */
	}

	/* Reset the UART's status register. */
	IOWR_ALTERA_AVALON_UART_STATUS(UART_RS232_BASE, 0);
	IOWR_ALTERA_AVALON_UART_STATUS(UART_RS232_BASE, 0);
}

static void init_uart()
{
	void* rxdata_ptr = (void*) &rxdata;

	/* Enable UART RRDY interrupt */
	IOWR_ALTERA_AVALON_UART_CONTROL(UART_RS232_BASE, ALTERA_AVALON_UART_CONTROL_RRDY_MSK);

	/* Reset the UART's status register. */
	IOWR_ALTERA_AVALON_UART_STATUS(UART_RS232_BASE, 0);

	/* Register the interrupt handler. */
	alt_irq_register( UART_RS232_IRQ, rxdata_ptr, handle_uart_interrupts);

	/* reset the ring buffer */
	ring_buffer_wr_idx = 1;
	ring_buffer_rd_idx = 0;
}

static void clear_led()
{
	/* turn LEDs off */
    *LEDs = 0x00000000;
}

    
/*******************************************************************************
 * int main()                                                                  *
 ******************************************************************************/

int main(void)
{ 
	char c;

	/* turn LEDs off */
	clear_led();
    
    /* Initialize the UART. */
    init_uart();

    /* Initialize GPS state machine */
    gps_state_machine_reset();

    while( 1 ) 
    {
        /* ensure buffer isn't empty */
        if(!ring_buffer_empty())
        {
        	/*increment and check if the index is past buffer size */
        	ring_buffer_rd_idx++;
        	ring_buffer_rd_idx = ring_buffer_rd_idx % BUFFER_SIZE;

        	/* pull data off of buffer */
        	c = ring_buffer[ring_buffer_rd_idx];
        	//printf("%c", c);
        	gps_state_machine(c);

        }
    }

    return 0;
}

void WriteLCD( char* string1, char* string2)
{
	FILE *lcd;
	lcd = fopen("/dev/lcd_display", "w");

	/* Write strings to the LCD. */
	if (lcd != NULL )
	{
		fprintf(lcd, "\n%s\n", string1);
		fprintf(lcd, "%s\n",string2);
	}
	else
	{
		printf("Could not open LCD file!\n");
	}

	fclose( lcd );
}
/******************************************************************************
 *                                                                             *
 * License Agreement                                                           *
 *                                                                             *
 * Copyright (c) 2006 Altera Corporation, San Jose, California, USA.           *
 * All rights reserved.                                                        *
 *                                                                             *
 * Permission is hereby granted, free of charge, to any person obtaining a     *
 * copy of this software and associated documentation files (the "Software"),  *
 * to deal in the Software without restriction, including without limitation   *
 * the rights to use, copy, modify, merge, publish, distribute, sublicense,    *
 * and/or sell copies of the Software, and to permit persons to whom the       *
 * Software is furnished to do so, subject to the following conditions:        *
 *                                                                             *
 * The above copyright notice and this permission notice shall be included in  *
 * all copies or substantial portions of the Software.                         *
 *                                                                             *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR  *
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,    *
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE *
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER      *
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING     *
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER         *
 * DEALINGS IN THE SOFTWARE.                                                   *
 *                                                                             *
 * This agreement shall be governed in all respects by the laws of the State   *
 * of California and by the laws of the United States of America.              *
 * Altera does not recommend, suggest or require that this reference design    *
 * file be used in conjunction or combination with any other product.          *
 ******************************************************************************/
