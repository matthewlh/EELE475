/*************************************************************************
* file: uart_interrupts.h
* Name: Matthew Handley
* 		David Keltgen
* Date: 2014-11-25
*
*************************************************************************/

#ifndef _UART_INTERRUPT_H_
#define _UART_INTERRUPT_H_

#include "alt_types.h"
#include "altera_avalon_pio_regs.h"
#include "altera_avalon_uart_regs.h"
#include "sys/alt_irq.h"
#include "system.h"
#include "gps.h"
#include <stdio.h>
#include <unistd.h>



/* buffer */
#define BUFFER_SIZE 4096
volatile alt_u8 ring_buffer[BUFFER_SIZE];
volatile int ring_buffer_wr_idx;	// the next location to be written to
volatile int ring_buffer_rd_idx;	// the last location be read from

#define ring_buffer_full() ( ring_buffer_wr_idx == ring_buffer_rd_idx )

#define ring_buffer_empty() ( (ring_buffer_rd_idx == ring_buffer_wr_idx - 1) || \
							  ((ring_buffer_wr_idx == 0) && (ring_buffer_rd_idx == BUFFER_SIZE -1)) )



void WriteLCD( char* string1, char* string2);
int  uart_interrupts ( void );

#define LEDs 	 (volatile int *) 0x01001140
#define LED_RED_PIO_BASE LEDs

#endif
